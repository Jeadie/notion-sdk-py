{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Notion SDK for Python A simple and easy to use client for the Notion API This client is meant to be a Python version of the reference JavaScript SDK , so usage should be pretty similar between both. \ud83d\ude0a \ud83d\udce2 Announcement \u2014 0.4.0 has just been released, and it now comes with error handling and complete type hinting! The code is evolving rapidly; feel free to join the fun by opening an issue or PR. Installation pip install notion-client Usage Before getting started, create an integration and find the token. \u2192 Learn more about authorization . Import and initialize a client using an integration token or an OAuth access token . import os from notion_client import Client notion = Client ( auth = os . environ [ \"NOTION_TOKEN\" ]) In an asyncio environment, use the asynchronous client instead: from notion_client import AsyncClient notion = AsyncClient ( auth = os . environ [ \"NOTION_TOKEN\" ]) Make a request to any Notion API endpoint. See the complete list of endpoints in the API reference . from pprint import pprint list_users_response = notion . users . list () pprint ( list_users_response ) or with the asynchronous client: list_users_response = await notion . users . list () pprint ( list_users_response ) This would output something like: {'results': [{'avatar_url': 'https://secure.notion-static.com/e6a352a8-8381-44d0-a1dc-9ed80e62b53d.jpg', 'id': 'd40e767c-d7af-4b18-a86d-55c61f1e39a4', 'name': 'Avocado Lovelace', 'object': 'user', 'person': {'email': 'avo@example.org'}, 'type': 'person'}, ...]} All API endpoints are available in both the synchronous and asynchronous clients. Endpoint parameters are grouped into a single object. You don't need to remember which parameters go in the path, query, or body. my_page = notion . databases . query ( ** { \"database_id\" : \"897e5a76-ae52-4b48-9fdf-e71f5945d1af\" , \"filter\" : { \"property\" : \"Landmark\" , \"text\" : { \"contains\" : \"Bridge\" , }, }, } ) Handling errors If the API returns an unsuccessful response, an APIResponseError will be raised. The error contains properties from the response, and the most helpful is code . You can compare code to the values in the APIErrorCode object to avoid misspelling error codes. import logging from notion_client import APIErrorCode , APIResponseError try : my_page = notion . databases . query ( ** { \"database_id\" : \"897e5a76-ae52-4b48-9fdf-e71f5945d1af\" , \"filter\" : { \"property\" : \"Landmark\" , \"text\" : { \"contains\" : \"Bridge\" , }, }, } ) except APIResponseError as error : if error . code == APIErrorCode . ObjectNotFound : ... # For example: handle by asking the user to select a different database else : # Other error handling code logging . exception () Logging The client emits useful information to a logger. By default, it only emits warnings and errors. If you're debugging an application, and would like the client to log response bodies, set the log_level option to logging.DEBUG . notion = Client ( auth = os . environ [ \"NOTION_TOKEN\" ], log_level = logging . DEBUG , ) You may also set a custom logger to emit logs to a destination other than stdout . Have a look at Python's logging cookbook if you want to create your own logger. Client options Client and AsyncClient both support the following options on initialization. These options are all keys in the single constructor parameter. Option Default value Type Description auth None string Bearer token for authentication. If left undefined, the auth parameter should be set on each request. log_level logging.WARNING int Verbosity of logs the instance will produce. By default, logs are written to stdout . timeout_ms 60_000 int Number of milliseconds to wait before emitting a RequestTimeoutError base_url \"https://api.notion.com\" string The root URL for sending API requests. This can be changed to test with a mock server. logger Log to console logging.Logger A custom logger. Requirements This package supports the following minimum versions: Python >= 3.7 httpx >= 0.15.0 Earlier versions may still work, but we encourage people building new applications to upgrade to the current stable. Getting help If you have a question about the library, or are having difficulty using it, chat with the community in GitHub Discussions . If you're experiencing issues with the Notion API, such as a service interruption or a potential bug in the platform, reach out to Notion help .","title":"Overview"},{"location":"#installation","text":"pip install notion-client","title":"Installation"},{"location":"#usage","text":"Before getting started, create an integration and find the token. \u2192 Learn more about authorization . Import and initialize a client using an integration token or an OAuth access token . import os from notion_client import Client notion = Client ( auth = os . environ [ \"NOTION_TOKEN\" ]) In an asyncio environment, use the asynchronous client instead: from notion_client import AsyncClient notion = AsyncClient ( auth = os . environ [ \"NOTION_TOKEN\" ]) Make a request to any Notion API endpoint. See the complete list of endpoints in the API reference . from pprint import pprint list_users_response = notion . users . list () pprint ( list_users_response ) or with the asynchronous client: list_users_response = await notion . users . list () pprint ( list_users_response ) This would output something like: {'results': [{'avatar_url': 'https://secure.notion-static.com/e6a352a8-8381-44d0-a1dc-9ed80e62b53d.jpg', 'id': 'd40e767c-d7af-4b18-a86d-55c61f1e39a4', 'name': 'Avocado Lovelace', 'object': 'user', 'person': {'email': 'avo@example.org'}, 'type': 'person'}, ...]} All API endpoints are available in both the synchronous and asynchronous clients. Endpoint parameters are grouped into a single object. You don't need to remember which parameters go in the path, query, or body. my_page = notion . databases . query ( ** { \"database_id\" : \"897e5a76-ae52-4b48-9fdf-e71f5945d1af\" , \"filter\" : { \"property\" : \"Landmark\" , \"text\" : { \"contains\" : \"Bridge\" , }, }, } )","title":"Usage"},{"location":"#handling-errors","text":"If the API returns an unsuccessful response, an APIResponseError will be raised. The error contains properties from the response, and the most helpful is code . You can compare code to the values in the APIErrorCode object to avoid misspelling error codes. import logging from notion_client import APIErrorCode , APIResponseError try : my_page = notion . databases . query ( ** { \"database_id\" : \"897e5a76-ae52-4b48-9fdf-e71f5945d1af\" , \"filter\" : { \"property\" : \"Landmark\" , \"text\" : { \"contains\" : \"Bridge\" , }, }, } ) except APIResponseError as error : if error . code == APIErrorCode . ObjectNotFound : ... # For example: handle by asking the user to select a different database else : # Other error handling code logging . exception ()","title":"Handling errors"},{"location":"#logging","text":"The client emits useful information to a logger. By default, it only emits warnings and errors. If you're debugging an application, and would like the client to log response bodies, set the log_level option to logging.DEBUG . notion = Client ( auth = os . environ [ \"NOTION_TOKEN\" ], log_level = logging . DEBUG , ) You may also set a custom logger to emit logs to a destination other than stdout . Have a look at Python's logging cookbook if you want to create your own logger.","title":"Logging"},{"location":"#client-options","text":"Client and AsyncClient both support the following options on initialization. These options are all keys in the single constructor parameter. Option Default value Type Description auth None string Bearer token for authentication. If left undefined, the auth parameter should be set on each request. log_level logging.WARNING int Verbosity of logs the instance will produce. By default, logs are written to stdout . timeout_ms 60_000 int Number of milliseconds to wait before emitting a RequestTimeoutError base_url \"https://api.notion.com\" string The root URL for sending API requests. This can be changed to test with a mock server. logger Log to console logging.Logger A custom logger.","title":"Client options"},{"location":"#requirements","text":"This package supports the following minimum versions: Python >= 3.7 httpx >= 0.15.0 Earlier versions may still work, but we encourage people building new applications to upgrade to the current stable.","title":"Requirements"},{"location":"#getting-help","text":"If you have a question about the library, or are having difficulty using it, chat with the community in GitHub Discussions . If you're experiencing issues with the Notion API, such as a service interruption or a potential bug in the platform, reach out to Notion help .","title":"Getting help"},{"location":"SUMMARY/","text":"Home Overview Quick Start License Reference Client API Endpoints Errors Helpers Development Coverage Report Contributing Guidelines","title":"SUMMARY"},{"location":"license/","text":"The MIT License (MIT) Copyright (c) 2021 Guillaume Gelin Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"quick_start/","text":"Quick Start Get started with notion-sdk-py in just 5 minutes! Setup Pre requisites Make sure you have python and pip properly installed in your system. python --version pip --version Create a new directory and move into it to follow along with this tutorial. mkdir learn-notion-sdk-py && cd learn-notion-sdk-py Installation Create a virtual environment and activate it. python -m venv .venv && source .venv/bin/activate Install notion-sdk-py using pip pip install --upgrade notion-client Create integration Go to notion.so/my-integrations to create an integration. Copy the token given by Notion. Make it available in your environment: export NOTION_TOKEN = secret_abcd12345 Tip Don't forget that export only puts the variable in the environment of the current shell. If you don't want to redo this step for every new shell, add the line in your shell configuration or use a configuration library like dotenv . Play Copy paste the code, and have fun tweaking it. Initialize the notion client from pprint import pprint from notion_client import Client import settings notion = Client ( auth = settings . NOTION_TOKEN ) Get all users Let us fetch the list of users in the scope of our integration. users = notion . users . list () # print(users) for user in users . get ( \"results\" ): name , user_type = user [ \"name\" ], user [ \"type\" ] is_bot = user [ \"type\" ] == \"bot\" print ( f \" { name } is a { user_type } { '\ud83d\ude05' if is_bot else '\ud83d\ude4b\u200d\u2642\ufe0f' } \" ) This would output something in the lines of Aahnik Daw is a person \ud83d\ude4b\u200d\u2642\ufe0f TestInti is a bot \ud83d\ude05 Do you see your name and the name of your integration? \ud83c\udf89 Congratulations, you are now ready to use notion-sdk-py! Whats next ? With the simplicity of python and flexibility of Notion, you can connect Notion pages and databases to the tools you use every day, creating powerful workflows. These resources should help you along the way: Examples Curated examples that are designed to make you learn. Reference Full reference of all public classes and methods. Projects Compilation of open source projects that are using this library. Discussions What people are discussing about notion-sdk-py.","title":"Quick Start"},{"location":"quick_start/#quick-start","text":"Get started with notion-sdk-py in just 5 minutes!","title":"Quick Start"},{"location":"quick_start/#setup","text":"","title":"Setup"},{"location":"quick_start/#pre-requisites","text":"Make sure you have python and pip properly installed in your system. python --version pip --version Create a new directory and move into it to follow along with this tutorial. mkdir learn-notion-sdk-py && cd learn-notion-sdk-py","title":"Pre requisites"},{"location":"quick_start/#installation","text":"Create a virtual environment and activate it. python -m venv .venv && source .venv/bin/activate Install notion-sdk-py using pip pip install --upgrade notion-client","title":"Installation"},{"location":"quick_start/#create-integration","text":"Go to notion.so/my-integrations to create an integration. Copy the token given by Notion. Make it available in your environment: export NOTION_TOKEN = secret_abcd12345 Tip Don't forget that export only puts the variable in the environment of the current shell. If you don't want to redo this step for every new shell, add the line in your shell configuration or use a configuration library like dotenv .","title":"Create integration"},{"location":"quick_start/#play","text":"Copy paste the code, and have fun tweaking it.","title":"Play"},{"location":"quick_start/#initialize-the-notion-client","text":"from pprint import pprint from notion_client import Client import settings notion = Client ( auth = settings . NOTION_TOKEN )","title":"Initialize the notion client"},{"location":"quick_start/#get-all-users","text":"Let us fetch the list of users in the scope of our integration. users = notion . users . list () # print(users) for user in users . get ( \"results\" ): name , user_type = user [ \"name\" ], user [ \"type\" ] is_bot = user [ \"type\" ] == \"bot\" print ( f \" { name } is a { user_type } { '\ud83d\ude05' if is_bot else '\ud83d\ude4b\u200d\u2642\ufe0f' } \" ) This would output something in the lines of Aahnik Daw is a person \ud83d\ude4b\u200d\u2642\ufe0f TestInti is a bot \ud83d\ude05 Do you see your name and the name of your integration? \ud83c\udf89 Congratulations, you are now ready to use notion-sdk-py!","title":"Get all users"},{"location":"quick_start/#whats-next","text":"With the simplicity of python and flexibility of Notion, you can connect Notion pages and databases to the tools you use every day, creating powerful workflows. These resources should help you along the way: Examples Curated examples that are designed to make you learn. Reference Full reference of all public classes and methods. Projects Compilation of open source projects that are using this library. Discussions What people are discussing about notion-sdk-py.","title":"Whats next ?"},{"location":"contributing/contributing/","text":"Contributing Guidelines If you are a first time contributor, start by reading this fantastic guide . Read the docs notion-sdk-py Notion API Reference httpx System Requirements git python pip Fork the repository and clone it. Checkout a new feature branch from main . This guide will be really helpful if you are a newbie. Install dependencies inside a virtual environment. python -m venv .venv && source .venv/bin/activate pip install -r requirements/dev.txt Install pre-commit hooks. pre-commit install Follow the code style enforced by tools such as black, isort, flake, mypy. For markdown files, markdownlint must be followed. Tests must pass. If you are adding features write tests.","title":"Contributing Guidelines"},{"location":"contributing/contributing/#contributing-guidelines","text":"If you are a first time contributor, start by reading this fantastic guide . Read the docs notion-sdk-py Notion API Reference httpx System Requirements git python pip Fork the repository and clone it. Checkout a new feature branch from main . This guide will be really helpful if you are a newbie. Install dependencies inside a virtual environment. python -m venv .venv && source .venv/bin/activate pip install -r requirements/dev.txt Install pre-commit hooks. pre-commit install Follow the code style enforced by tools such as black, isort, flake, mypy. For markdown files, markdownlint must be followed. Tests must pass. If you are adding features write tests.","title":"Contributing Guidelines"},{"location":"reference/api_endpoints/","text":"notion_client.api_endpoints Notion API endpoints. BlocksChildrenEndpoint append ( self , block_id , ** kwargs ) Create and append new children blocks to the block using the ID specified. Returns the Block object which contains the new children. list ( self , block_id , ** kwargs ) Return a paginated array of child block objects contained in the block. In order to receive a complete representation of a block, you may need to recursively retrieve the block children of child blocks. The response may contain fewer than page_size of results. DatabasesEndpoint list ( self , ** kwargs ) List all Databases shared with the authenticated integration. The response may contain fewer than page_size of results. query ( self , database_id , ** kwargs ) Get a list of Pages contained in the database. The result is filtered and ordered according to the filter conditions and sort criteria provided in the request. retrieve ( self , database_id , ** kwargs ) Retrieve a Database object using the ID specified. PagesEndpoint create ( self , ** kwargs ) Create a new page in the specified database or as a child of an existing page. If the parent is a database, the property values of the new page, the properties parameter must conform to the parent database's property schema. If the parent is a page, the only valid property is title. The new page may include page content, described as blocks in the children parameter. retrieve ( self , page_id , ** kwargs ) Retrieve a Page object using the ID specified. update ( self , page_id , ** kwargs ) Update page property values for the specified page. Properties that are not set via the properties parameter will remain unchanged. If the parent is a database, the new property values in the properties parameter must conform to the parent database's property schema. SearchEndpoint __call__ ( self , ** kwargs ) special Search all pages and child pages that are shared with the integration. The results may include databases. The query parameter matches against the page titles. If the query parameter is not provided, the response will contain all pages (and child pages) in the results. The filter parameter can be used to query specifically for only pages or only databases. UsersEndpoint list ( self , ** kwargs ) Return a paginated list of Users for the workspace. The response may contain fewer than page_size of results. retrieve ( self , user_id , ** kwargs ) Retrieve a User using the ID specified.","title":"API Endpoints"},{"location":"reference/api_endpoints/#notion_client.api_endpoints","text":"Notion API endpoints.","title":"api_endpoints"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.BlocksChildrenEndpoint","text":"","title":"BlocksChildrenEndpoint"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.BlocksChildrenEndpoint.append","text":"Create and append new children blocks to the block using the ID specified. Returns the Block object which contains the new children.","title":"append()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.BlocksChildrenEndpoint.list","text":"Return a paginated array of child block objects contained in the block. In order to receive a complete representation of a block, you may need to recursively retrieve the block children of child blocks. The response may contain fewer than page_size of results.","title":"list()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.DatabasesEndpoint","text":"","title":"DatabasesEndpoint"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.DatabasesEndpoint.list","text":"List all Databases shared with the authenticated integration. The response may contain fewer than page_size of results.","title":"list()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.DatabasesEndpoint.query","text":"Get a list of Pages contained in the database. The result is filtered and ordered according to the filter conditions and sort criteria provided in the request.","title":"query()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.DatabasesEndpoint.retrieve","text":"Retrieve a Database object using the ID specified.","title":"retrieve()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.PagesEndpoint","text":"","title":"PagesEndpoint"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.PagesEndpoint.create","text":"Create a new page in the specified database or as a child of an existing page. If the parent is a database, the property values of the new page, the properties parameter must conform to the parent database's property schema. If the parent is a page, the only valid property is title. The new page may include page content, described as blocks in the children parameter.","title":"create()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.PagesEndpoint.retrieve","text":"Retrieve a Page object using the ID specified.","title":"retrieve()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.PagesEndpoint.update","text":"Update page property values for the specified page. Properties that are not set via the properties parameter will remain unchanged. If the parent is a database, the new property values in the properties parameter must conform to the parent database's property schema.","title":"update()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.SearchEndpoint","text":"","title":"SearchEndpoint"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.SearchEndpoint.__call__","text":"Search all pages and child pages that are shared with the integration. The results may include databases. The query parameter matches against the page titles. If the query parameter is not provided, the response will contain all pages (and child pages) in the results. The filter parameter can be used to query specifically for only pages or only databases.","title":"__call__()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.UsersEndpoint","text":"","title":"UsersEndpoint"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.UsersEndpoint.list","text":"Return a paginated list of Users for the workspace. The response may contain fewer than page_size of results.","title":"list()"},{"location":"reference/api_endpoints/#notion_client.api_endpoints.UsersEndpoint.retrieve","text":"Retrieve a User using the ID specified.","title":"retrieve()"},{"location":"reference/client/","text":"notion_client.client Sync and async clients for notion-sdk-py. AsyncClient Async client for Notion API. request ( self , path , method , query = None , body = None , auth = None ) async Send an HTTP request using async client. Client Sync client for Notion API. request ( self , path , method , query = None , body = None , auth = None ) Send an HTTP request. ClientOptions dataclass Options to configure the client. Attributes: Name Type Description auth Optional[str] Bearer token for authentication. If left undefined, the auth parameter should be set on each request. timeout_ms int Number of milliseconds to wait before emitting a RequestTimeoutError . base_url str The root URL for sending API requests. This can be changed to test with a mock server. log_level int Verbosity of logs the instance will produce. By default, logs are written to stdout . logger Optional[logging.Logger] A custom logger. notion_version str Notion version to use.","title":"Client"},{"location":"reference/client/#notion_client.client","text":"Sync and async clients for notion-sdk-py.","title":"client"},{"location":"reference/client/#notion_client.client.AsyncClient","text":"Async client for Notion API.","title":"AsyncClient"},{"location":"reference/client/#notion_client.client.AsyncClient.request","text":"Send an HTTP request using async client.","title":"request()"},{"location":"reference/client/#notion_client.client.Client","text":"Sync client for Notion API.","title":"Client"},{"location":"reference/client/#notion_client.client.Client.request","text":"Send an HTTP request.","title":"request()"},{"location":"reference/client/#notion_client.client.ClientOptions","text":"Options to configure the client. Attributes: Name Type Description auth Optional[str] Bearer token for authentication. If left undefined, the auth parameter should be set on each request. timeout_ms int Number of milliseconds to wait before emitting a RequestTimeoutError . base_url str The root URL for sending API requests. This can be changed to test with a mock server. log_level int Verbosity of logs the instance will produce. By default, logs are written to stdout . logger Optional[logging.Logger] A custom logger. notion_version str Notion version to use.","title":"ClientOptions"},{"location":"reference/errors/","text":"notion_client.errors Custom Exceptions for notion-sdk-py. This module defines python Exceptions that are raised when their corresponding HTTP response codes are returned by Notion API. APIErrorCode Enumerate API error codes. ConflictError The transaction could not be completed, potentially due to a data collision. Make sure the parameters are up to date and try again. InternalServerError An unexpected error occurred. Reach out to Notion support. InvalidJSON The request body could not be decoded as JSON. InvalidRequest This request is not supported. InvalidRequestURL The request URL is not valid. ObjectNotFound Given the bearer token used, the resource does not exist. This error can also indicate that the resource has not been shared with owner of the bearer token. RateLimited This request exceeds the number of requests allowed. Slow down and try again. RestrictedResource Given the bearer token used, the client doesn't have permission to perform this operation. ServiceUnavailable Notion is unavailable. Try again later. This can occur when the time to respond to a request takes longer than 60 seconds, the maximum request timeout. Unauthorized The bearer token is not valid. ValidationError The request body does not match the schema for the expected parameters. APIErrorResponseBody dataclass APIErrorResponseBody(code: notion_client.errors.APIErrorCode, message: str) APIResponseError An error raised by Notion API. __init__ ( self , response , body ) special Initialize api response error. is_api_response_error ( e ) staticmethod Check if Exception is an API response error. HTTPResponseError HTTP Response Errors. Responses from the API use HTTP response codes that are used to indicate general classes of success and error. is_http_response_error ( e ) Check if Exception is an http response error. RequestTimeoutError Request timed out. The request that we made waits for a specified period of time or maximum number of retries to get the response. But if no response comes within the limited time or retries, then this Exception is raised. __init__ ( self , message = 'Request to Notion API has timed out' ) special Initialize RequestTimeoutError. is_request_timeout_error ( e ) staticmethod Check if Exception is an request timeout error. is_api_error_code ( code ) Check if given code belongs to the list of valid API error codes. is_http_error ( e ) Check if Exception is an HTTP error. is_timeout_error ( e ) Check if Exception is a timeout error.","title":"Errors"},{"location":"reference/errors/#notion_client.errors","text":"Custom Exceptions for notion-sdk-py. This module defines python Exceptions that are raised when their corresponding HTTP response codes are returned by Notion API.","title":"errors"},{"location":"reference/errors/#notion_client.errors.APIErrorCode","text":"Enumerate API error codes.","title":"APIErrorCode"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.ConflictError","text":"The transaction could not be completed, potentially due to a data collision. Make sure the parameters are up to date and try again.","title":"ConflictError"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.InternalServerError","text":"An unexpected error occurred. Reach out to Notion support.","title":"InternalServerError"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.InvalidJSON","text":"The request body could not be decoded as JSON.","title":"InvalidJSON"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.InvalidRequest","text":"This request is not supported.","title":"InvalidRequest"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.InvalidRequestURL","text":"The request URL is not valid.","title":"InvalidRequestURL"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.ObjectNotFound","text":"Given the bearer token used, the resource does not exist. This error can also indicate that the resource has not been shared with owner of the bearer token.","title":"ObjectNotFound"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.RateLimited","text":"This request exceeds the number of requests allowed. Slow down and try again.","title":"RateLimited"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.RestrictedResource","text":"Given the bearer token used, the client doesn't have permission to perform this operation.","title":"RestrictedResource"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.ServiceUnavailable","text":"Notion is unavailable. Try again later. This can occur when the time to respond to a request takes longer than 60 seconds, the maximum request timeout.","title":"ServiceUnavailable"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.Unauthorized","text":"The bearer token is not valid.","title":"Unauthorized"},{"location":"reference/errors/#notion_client.errors.APIErrorCode.ValidationError","text":"The request body does not match the schema for the expected parameters.","title":"ValidationError"},{"location":"reference/errors/#notion_client.errors.APIErrorResponseBody","text":"APIErrorResponseBody(code: notion_client.errors.APIErrorCode, message: str)","title":"APIErrorResponseBody"},{"location":"reference/errors/#notion_client.errors.APIResponseError","text":"An error raised by Notion API.","title":"APIResponseError"},{"location":"reference/errors/#notion_client.errors.APIResponseError.__init__","text":"Initialize api response error.","title":"__init__()"},{"location":"reference/errors/#notion_client.errors.APIResponseError.is_api_response_error","text":"Check if Exception is an API response error.","title":"is_api_response_error()"},{"location":"reference/errors/#notion_client.errors.HTTPResponseError","text":"HTTP Response Errors. Responses from the API use HTTP response codes that are used to indicate general classes of success and error.","title":"HTTPResponseError"},{"location":"reference/errors/#notion_client.errors.HTTPResponseError.is_http_response_error","text":"Check if Exception is an http response error.","title":"is_http_response_error()"},{"location":"reference/errors/#notion_client.errors.RequestTimeoutError","text":"Request timed out. The request that we made waits for a specified period of time or maximum number of retries to get the response. But if no response comes within the limited time or retries, then this Exception is raised.","title":"RequestTimeoutError"},{"location":"reference/errors/#notion_client.errors.RequestTimeoutError.__init__","text":"Initialize RequestTimeoutError.","title":"__init__()"},{"location":"reference/errors/#notion_client.errors.RequestTimeoutError.is_request_timeout_error","text":"Check if Exception is an request timeout error.","title":"is_request_timeout_error()"},{"location":"reference/errors/#notion_client.errors.is_api_error_code","text":"Check if given code belongs to the list of valid API error codes.","title":"is_api_error_code()"},{"location":"reference/errors/#notion_client.errors.is_http_error","text":"Check if Exception is an HTTP error.","title":"is_http_error()"},{"location":"reference/errors/#notion_client.errors.is_timeout_error","text":"Check if Exception is a timeout error.","title":"is_timeout_error()"},{"location":"reference/helpers/","text":"notion_client.helpers Utility functions for notion-sdk-py. get_id ( url ) Return the id of the object of given url. get_url ( obj_id ) Return url for the object of given id. pick ( base , * keys ) Return a Dict composed of key value pairs for keys passed as args.","title":"Helpers"},{"location":"reference/helpers/#notion_client.helpers","text":"Utility functions for notion-sdk-py.","title":"helpers"},{"location":"reference/helpers/#notion_client.helpers.get_id","text":"Return the id of the object of given url.","title":"get_id()"},{"location":"reference/helpers/#notion_client.helpers.get_url","text":"Return url for the object of given id.","title":"get_url()"},{"location":"reference/helpers/#notion_client.helpers.pick","text":"Return a Dict composed of key value pairs for keys passed as args.","title":"pick()"},{"location":"coverage/","text":".md-content { max-width: none !important; } article h1, article > a { display: none; } var coviframe = document.getElementById(\"coviframe\"); function resizeIframe() { coviframe.style.height = coviframe.contentWindow.document.documentElement.offsetHeight + 'px'; } coviframe.contentWindow.document.body.onclick = function() { coviframe.contentWindow.location.reload(); }","title":"Coverage Report"}]}